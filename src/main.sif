#include"core:basic.sif"
#include"coder.sif"

proc slice_equal(a: []$T, b: []T): bool {
  if(a.count != b.count) return false;
  for(i := 0; i < a.count; i += 1) {
    if(a[i] != b[i]) return false;
  }
  return true;
}

proc test_base64(to_test : string) {
  to_encode: = transmute([]u8, to_test);
  encoded: = coder.to_base64(default_allocator(), to_encode);
  assert(coder.is_base64(encoded));
  decoded: = coder.from_base64(default_allocator(), encoded);
  assert(slice_equal(decoded, to_encode));
}

proc main() {
  //coder.to_base64(default_allocator(), .{});
  arr: [4]u8 = .{1,2,3,4};
  coder_init_globals();
  test_base64("Man");
  test_base64("Ma");
  test_base64("Ma");
  test_base64("pleasure.");
  test_base64("pleasure");
  test_base64("pleasur");
  test_base64("pleasu");
  test_base64("pleas");
}